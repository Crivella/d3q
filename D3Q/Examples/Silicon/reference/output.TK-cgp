  Using      1 MPI processes
 
      
     For 2n+1 calculations of force constants please cite:
      1. Lorenzo Paulatto, Francesco Mauri, and Michele Lazzeri
         Phys. Rev. B 87, 214303 – Published 7 June 2013
      
     For thermal transport calculations please cite:
      2. Giorgia Fugallo, Michele Lazzeri, Lorenzo Paulatto, and Francesco Mauri
         Phys. Rev. B 88, 045430 – Published 17 July 2013
      3. A. Cepellotti, G. Fugallo, L. Paulatto, M. Lazzeri, F. Mauri, N. Marzari,
         Nature communications 6 (2015)
      4. G. Fugallo, A. Cepellotti, L. Paulatto, M. Lazzeri, N. Marzari, F. Mauri,
         Nano letters 14 (11), 6109-6114 (2014)
      
     For spectral function calculations also cite:
      5. Lorenzo Paulatto, Ion Errea, Matteo Calandra, and Francesco Mauri,
         Phys. Rev. B 91, 054304 (2015)
 
  Reading input file 'input.TK-cgp'
 &TKINPUT
 CALCULATION     = cgp             ,
 OUTDIR  = ./TK-cgp/                                                                                                                 
                                                                                                                                     
   ,
 PREFIX  = ///                                                                                                                       
                                                                                                                                     
   ,
 FILE_MAT2       = mat2R                                                                                                             
                                                                                                                                     
           ,
 FILE_MAT3       = mat3R.asr.sparse                                                                                                  
                                                                                                                                     
           ,
 ASR2    = simple  ,
 THR_TK  =  1.000000000000000E-002,
 NITER_MAX       =        1000,
 NCONF   =           1,
 NK      = 3*5,
 NK_IN   = 3*-1,
 GRID_TYPE       = simple,
 ISOTOPIC_DISORDER       = F,
 CASIMIR_SCATTERING      = F,
 CASIMIR_LENGTH_AU       =  -1.00000000000000     ,
 CASIMIR_LENGTH_MU       =  -1.00000000000000     ,
 CASIMIR_LENGTH_MM       =  -1.00000000000000     ,
 CASIMIR_DIR     = 3*0.000000000000000E+000  ,
 MAX_SECONDS     =          -1,
 MAX_TIME        =  -1.00000000000000     ,
 RESTART = F
 /
 ** Reading FC2 file: mat2R
     alat (bohr)   10.200000
     tpiba (1/bohr)    0.615999
     at_1 = (   -0.500000    0.000000    0.500000 )
     at_2 = (    0.000000    0.500000    0.500000 )
     at_3 = (   -0.500000    0.500000    0.000000 )
     bg_1 = (   -1.000000   -1.000000    1.000000 )
     bg_2 = (    1.000000    1.000000    1.000000 )
     bg_3 = (   -1.000000    1.000000   -1.000000 )
     volume (bohr^3)  265.302000
 Original FC2 grid:           4           4           4
 ** Reading sparse FC3 file mat3R.asr.sparse
     alat (bohr)   10.200000
     tpiba (1/bohr)    0.615999
     at_1 = (   -0.500000    0.000000    0.500000 )
     at_2 = (    0.000000    0.500000    0.500000 )
     at_3 = (   -0.500000    0.500000    0.000000 )
     bg_1 = (   -1.000000   -1.000000    1.000000 )
     bg_2 = (    1.000000    1.000000    1.000000 )
     bg_3 = (   -1.000000    1.000000   -1.000000 )
     volume (bohr^3)  265.302000
    Original FC3 grid:           2           2           2
    Number of R:               301
 Reading : done.
 Memory used :            3 Mb
 calculation: cgp             full            
 Reading CONFIGS           1
  Temperatures:
    300.0
  Smearings:   
     10.0
 
  Setup a simple grid of      125 q-points
  Setup a simple grid of      125 q-points
  Restart disabled from input: restarting from scratch.
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    0
        sigma[cmm1]   T[K]      K_x              K_y              K_z              
  SMA TK
     1   10.0000  300.0000   0.16886831E+03   0.16886831E+03   0.16886831E+03
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    0
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.18501871E+03   0.18501871E+03   0.18501871E+03
  Delta TK - initial
     1   10.0000  300.0000   0.16150401E+02   0.16150401E+02   0.16150401E+02
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    1
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.21016013E+03   0.21016013E+03   0.21016013E+03
  Delta TK
     1   10.0000  300.0000   0.25141422E+02   0.25141422E+02   0.25141422E+02
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    2
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.21905711E+03   0.21905711E+03   0.21905711E+03
  Delta TK
     1   10.0000  300.0000   0.88969762E+01   0.88969762E+01   0.88969762E+01
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    3
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.22027358E+03   0.22027358E+03   0.22027358E+03
  Delta TK
     1   10.0000  300.0000   0.12164721E+01   0.12164721E+01   0.12164721E+01
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    4
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.22045524E+03   0.22045524E+03   0.22045524E+03
  Delta TK
     1   10.0000  300.0000   0.18166228E+00   0.18166228E+00   0.18166228E+00
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    5
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.22047220E+03   0.22047220E+03   0.22047220E+03
  Delta TK
     1   10.0000  300.0000   0.16954282E-01   0.16954282E-01   0.16954282E-01
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    6
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.22047439E+03   0.22047439E+03   0.22047439E+03
  Delta TK
     1   10.0000  300.0000   0.21916089E-02   0.21916089E-02   0.21916089E-02
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    Convergence achieved
   * WALL :      49.2599 s
   *                          *              ms *         ms/call *          ms*cpu *     ms*cpu/call *  % wtime *        calls *
   *      precond./initialize *       30.350491 *        7.587623 *          30.350 *        7.587623 *    0.062 *           4. *
   *            prepare A_out *     6039.547791 *     6039.547791 *        6039.548 *     6039.547791 *   12.261 *           1. *
   *   prepare and apply A_in *    42232.958690 *     6033.279813 *       42232.959 *     6033.279813 *   85.735 *           7. *
   *         computer CG step *        0.695974 *        0.115996 *           0.696 *        0.115996 *    0.001 *           6. *
   *         restart data i/o *        0.014246 *        0.002035 *           0.014 *        0.002035 *    0.000 *           7. *
*** * High level components:
   *            1/sqrt(A_out) *        0.715641 *        0.000811 *           0.716 *        0.000811 *    0.001 *         882. *
   *                 lw ph-ph *     6039.449247 *       48.315594 *        6039.449 *       48.315594 *   12.260 *         125. *
*** * Low level subroutines: 
   *         ph interp & diag *    11745.656939 *        0.093219 *       11745.657 *        0.093219 *   23.844 *      126000. *
   *             bose distrib *      161.445762 *        0.001292 *         161.446 *        0.001292 *    0.328 *      125000. *
   *                sum modes *     1961.382554 *        0.015691 *        1961.383 *        0.015691 *    3.982 *      125000. *
   *          fc3 interpolate *    12951.921834 *        0.052016 *       12951.922 *        0.052016 *   26.293 *      249000. *
   *           fc3 modulus sq *      258.224691 *        0.001037 *         258.225 *        0.001037 *    0.524 *      249000. *
   *               fc3 rotate *    20259.455388 *        0.081363 *       20259.455 *        0.081363 *   41.128 *      249000. *
   *        mpi communication *        1.489585 *        0.001490 *           1.490 *        0.001490 *    0.003 *        1000. *
   *         merge degenerate *        0.885273 *        0.000787 *           0.885 *        0.000787 *    0.002 *        1125. *
 
      
     For 2n+1 calculations of force constants please cite:
      1. Lorenzo Paulatto, Francesco Mauri, and Michele Lazzeri
         Phys. Rev. B 87, 214303 – Published 7 June 2013
      
     For thermal transport calculations please cite:
      2. Giorgia Fugallo, Michele Lazzeri, Lorenzo Paulatto, and Francesco Mauri
         Phys. Rev. B 88, 045430 – Published 17 July 2013
      3. A. Cepellotti, G. Fugallo, L. Paulatto, M. Lazzeri, F. Mauri, N. Marzari,
         Nature communications 6 (2015)
      4. G. Fugallo, A. Cepellotti, L. Paulatto, M. Lazzeri, N. Marzari, F. Mauri,
         Nano letters 14 (11), 6109-6114 (2014)
      
     For spectral function calculations also cite:
      5. Lorenzo Paulatto, Ion Errea, Matteo Calandra, and Francesco Mauri,
         Phys. Rev. B 91, 054304 (2015)
 
