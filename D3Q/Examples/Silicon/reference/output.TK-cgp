  Using      1 MPI processes
 
      
     For 2n+1 calculations of force constants please cite:
      1. Lorenzo Paulatto, Francesco Mauri, and Michele Lazzeri
         Phys. Rev. B 87, 214303 (2013)
      
     For thermal transport calculations please cite:
      2. Giorgia Fugallo, Michele Lazzeri, Lorenzo Paulatto, and Francesco Mauri
         Phys. Rev. B 88, 045430 (2013)
      3. A. Cepellotti, G. Fugallo, L. Paulatto, M. Lazzeri, F. Mauri, N. Marzari,
         Nature communications 6 (2015)
      4. G. Fugallo, A. Cepellotti, L. Paulatto, M. Lazzeri, N. Marzari, F. Mauri,
         Nano letters 14 (11), 6109-6114 (2014)
      
     For spectral function calculations also cite:
      5. Lorenzo Paulatto, Ion Errea, Matteo Calandra, and Francesco Mauri,
         Phys. Rev. B 91, 054304 (2015)
 
  Reading input file 'input.TK-cgp'
 &TKINPUT
 CALCULATION     = cgp             ,
 OUTDIR  = ./TK-cgp/                                                                                                                 
                                                                                                                                     
   ,
 PREFIX  = ///                                                                                                                       
                                                                                                                                     
   ,
 FILE_MAT2       = mat2R                                                                                                             
                                                                                                                                     
           ,
 FILE_MAT3       = mat3R.asr.sparse                                                                                                  
                                                                                                                                     
           ,
 ASR2    = simple  ,
 THR_TK  =  1.000000000000000E-002,
 NITER_MAX       =        1000,
 NCONF   =           1,
 NK      = 3*5,
 NK_IN   = 3*-1,
 GRID_TYPE       = simple,
 ISOTOPIC_DISORDER       = F,
 STORE_LW        = F,
 CASIMIR_SCATTERING      = F,
 CASIMIR_LENGTH_AU       =  -1.00000000000000     ,
 CASIMIR_LENGTH_MU       =  -1.00000000000000     ,
 CASIMIR_LENGTH_MM       =  -1.00000000000000     ,
 CASIMIR_DIR     = 3*0.000000000000000E+000  ,
 MAX_SECONDS     =          -1,
 MAX_TIME        =  -1.00000000000000     ,
 RESTART = F
 /
 ** Reading FC2 file: mat2R
     alat (bohr)   10.200000
     tpiba (1/bohr)    0.615999
     at_1 = (   -0.500000    0.000000    0.500000 )
     at_2 = (    0.000000    0.500000    0.500000 )
     at_3 = (   -0.500000    0.500000    0.000000 )
     bg_1 = (   -1.000000   -1.000000    1.000000 )
     bg_2 = (    1.000000    1.000000    1.000000 )
     bg_3 = (   -1.000000    1.000000   -1.000000 )
     volume (bohr^3)  265.302000
 Original FC2 grid:           4           4           4
 ** Reading sparse FC3 file mat3R.asr.sparse
     alat (bohr)   10.200000
     tpiba (1/bohr)    0.615999
     at_1 = (   -0.500000    0.000000    0.500000 )
     at_2 = (    0.000000    0.500000    0.500000 )
     at_3 = (   -0.500000    0.500000    0.000000 )
     bg_1 = (   -1.000000   -1.000000    1.000000 )
     bg_2 = (    1.000000    1.000000    1.000000 )
     bg_3 = (   -1.000000    1.000000   -1.000000 )
     volume (bohr^3)  265.302000
    Original FC3 grid:           2           2           2
    Number of R:               301
 Reading : done.
 Memory used :            3 Mb
 calculation: cgp             full            
 Reading CONFIGS           1
  Temperatures:
    300.0
  Smearings:   
   10.000
 
 --> Setting up outer grid
  Setup a simple grid of      125 q-points
 --> Setting up inner grid from outer grid
  Setup a simple grid of      125 q-points
  Restart disabled from input: restarting from scratch.
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    0
        sigma[cmm1]   T[K]      K_x              K_y              K_z              
  SMA TK
     1   10.0000  300.0000   0.96900840E+02   0.96900840E+02   0.96900840E+02
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    1
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10138387E+03   0.10138387E+03   0.10138387E+03
  Delta TK (relative)
     1   10.0000  300.0000        0.0442183        0.0442183        0.0442183
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    2
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10273581E+03   0.10273581E+03   0.10273581E+03
  Delta TK (relative)
     1   10.0000  300.0000        0.0131594        0.0131594        0.0131594
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    3
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278086E+03   0.10278086E+03   0.10278086E+03
  Delta TK (relative)
     1   10.0000  300.0000        0.0004383        0.0004383        0.0004383
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    4
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278573E+03   0.10278573E+03   0.10278573E+03
  Delta TK (relative)
     1   10.0000  300.0000        0.0000474        0.0000474        0.0000474
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    5
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278606E+03   0.10278606E+03   0.10278606E+03
  Delta TK (relative)
     1   10.0000  300.0000        0.0000033        0.0000033        0.0000033
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    6
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278610E+03   0.10278610E+03   0.10278610E+03
  Delta TK (relative)
     1   10.0000  300.0000          0.3E-06          0.3E-06          0.3E-06
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    7
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278610E+03   0.10278610E+03   0.10278610E+03
  Delta TK (relative)
     1   10.0000  300.0000          0.3E-07          0.3E-07          0.3E-07
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    8
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278610E+03   0.10278610E+03   0.10278610E+03
  Delta TK (relative)
     1   10.0000  300.0000          0.2E-08          0.2E-08          0.2E-08
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter    9
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278610E+03   0.10278610E+03   0.10278610E+03
  Delta TK (relative)
     1   10.0000  300.0000          0.1E-09          0.1E-09          0.1E-09
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    iter   10
  TK from 1/2(fg-fb)
     1   10.0000  300.0000   0.10278610E+03   0.10278610E+03   0.10278610E+03
  Delta TK (relative)
     1   10.0000  300.0000          0.7E-11          0.7E-11          0.7E-11
   \>\^\~----------------------------------------^v^v--------------------=/~/o>
    Convergence achieved
   * WALL :      75.3978 s
   *                          *              ms *         ms/call *          ms*cpu *     ms*cpu/call *  % wtime *        calls *
   *      precond./initialize *       31.627191 *        7.906798 *          31.627 *        7.906798 *    0.042 *           4. *
   *            prepare A_out *     6083.566698 *     6083.566698 *        6083.567 *     6083.566698 *    8.069 *           1. *
   *   prepare and apply A_in *    68709.654545 *     6246.332231 *       68709.655 *     6246.332231 *   91.130 *          11. *
   *          compute CG step *        2.126133 *        0.212613 *           2.126 *        0.212613 *    0.003 *          10. *
   *         restart data i/o *        0.014038 *        0.001276 *           0.014 *        0.001276 *    0.000 *          11. *
*** * High level components:
   *            1/sqrt(A_out) *        1.166999 *        0.000842 *           1.167 *        0.000842 *    0.002 *        1386. *
   *                 lw ph-ph *     6083.416599 *       48.667333 *        6083.417 *       48.667333 *    8.068 *         125. *
*** * Low level subroutines: 
   *         ph interp & diag *    18340.222309 *        0.097038 *       18340.222 *        0.097038 *   24.325 *      189000. *
   *             bose distrib *      249.443836 *        0.001330 *         249.444 *        0.001330 *    0.331 *      187500. *
   *                sum modes *     3103.767249 *        0.016553 *        3103.767 *        0.016553 *    4.117 *      187500. *
   *          fc3 interpolate *    20242.909885 *        0.054198 *       20242.910 *        0.054198 *   26.848 *      373500. *
   *           fc3 modulus sq *      399.010292 *        0.001068 *         399.010 *        0.001068 *    0.529 *      373500. *
   *               fc3 rotate *    30980.872631 *        0.082947 *       30980.873 *        0.082947 *   41.090 *      373500. *
   *        mpi communication *        6.209436 *        0.004140 *           6.209 *        0.004140 *    0.008 *        1500. *
   *         merge degenerate *        1.618978 *        0.000996 *           1.619 *        0.000996 *    0.002 *        1625. *
 
      
     For 2n+1 calculations of force constants please cite:
      1. Lorenzo Paulatto, Francesco Mauri, and Michele Lazzeri
         Phys. Rev. B 87, 214303 (2013)
      
     For thermal transport calculations please cite:
      2. Giorgia Fugallo, Michele Lazzeri, Lorenzo Paulatto, and Francesco Mauri
         Phys. Rev. B 88, 045430 (2013)
      3. A. Cepellotti, G. Fugallo, L. Paulatto, M. Lazzeri, F. Mauri, N. Marzari,
         Nature communications 6 (2015)
      4. G. Fugallo, A. Cepellotti, L. Paulatto, M. Lazzeri, N. Marzari, F. Mauri,
         Nano letters 14 (11), 6109-6114 (2014)
      
     For spectral function calculations also cite:
      5. Lorenzo Paulatto, Ion Errea, Matteo Calandra, and Francesco Mauri,
         Phys. Rev. B 91, 054304 (2015)
 
